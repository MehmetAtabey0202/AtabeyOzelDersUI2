// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211027080544_mig2")]
    partial class mig2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concreate.Area", b =>
                {
                    b.Property<int>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Country_ID")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Area_ID");

                    b.HasIndex("Country_ID");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Branch", b =>
                {
                    b.Property<int>("Branch_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Distance_Learning")
                        .HasColumnType("bit");

                    b.Property<int?>("District_ID")
                        .HasColumnType("int");

                    b.Property<int>("Employee_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Employee_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Invoice_Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Province_ID")
                        .HasColumnType("int");

                    b.Property<int>("Province_PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("Province_PhoneNumber2")
                        .HasColumnType("int");

                    b.Property<int?>("Season_ID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Branch_ID");

                    b.HasIndex("District_ID");

                    b.HasIndex("Employee_ID1");

                    b.HasIndex("Province_ID");

                    b.HasIndex("Season_ID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Country", b =>
                {
                    b.Property<int>("Country_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doual_Kod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneralCenter_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Phone_Kod")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Country_ID");

                    b.HasIndex("GeneralCenter_ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Department", b =>
                {
                    b.Property<int>("Department_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneralCenter_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Department_ID");

                    b.HasIndex("GeneralCenter_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EntityLayer.Concreate.District", b =>
                {
                    b.Property<int>("District_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("District_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Province_ID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("District_ID");

                    b.HasIndex("Province_ID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EducationArea", b =>
                {
                    b.Property<int>("EducationArea_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationAreaType_ID")
                        .HasColumnType("int");

                    b.Property<string>("EducationArea_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationArea_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Season_ID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationArea_ID");

                    b.HasIndex("EducationAreaType_ID");

                    b.HasIndex("Season_ID");

                    b.ToTable("EducationAreas");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EducationAreaType", b =>
                {
                    b.Property<int>("EducationAreaType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationAreaType_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationAreaType_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationAreaType_ID");

                    b.ToTable("EducationAreaTypes");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Department_ID")
                        .HasColumnType("int");

                    b.Property<int?>("District_ID")
                        .HasColumnType("int");

                    b.Property<string>("Employee_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Employee_Name")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Surname")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Profession_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Province_ID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Department_ID");

                    b.HasIndex("District_ID");

                    b.HasIndex("Profession_ID");

                    b.HasIndex("Province_ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EntityLayer.Concreate.GeneralCenter", b =>
                {
                    b.Property<int>("GeneralCenter_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Area_ID")
                        .HasColumnType("int");

                    b.Property<int>("Country_ID")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("District_ID")
                        .HasColumnType("int");

                    b.Property<string>("E_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralCenter_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Province_ID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("GeneralCenter_ID");

                    b.ToTable("GeneralCenters");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Profession", b =>
                {
                    b.Property<int>("Profession_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Profession_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Profession_ID");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Province", b =>
                {
                    b.Property<int>("Province_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Area_ID")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Province_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Province_ID");

                    b.HasIndex("Area_ID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Season", b =>
                {
                    b.Property<int>("Season_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Max_Installment")
                        .HasColumnType("int");

                    b.Property<int>("Minimum_Advance_Rate")
                        .HasColumnType("int");

                    b.Property<string>("Season_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Season_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Season_End_Installment")
                        .HasColumnType("datetime2");

                    b.Property<int>("Season_Kode")
                        .HasColumnType("int");

                    b.Property<string>("Season_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Season_StartOfEdication")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Season_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Season_WeekOfNumber")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Season_ID");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Area", b =>
                {
                    b.HasOne("EntityLayer.Concreate.Country", "Country")
                        .WithMany("Areas")
                        .HasForeignKey("Country_ID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Branch", b =>
                {
                    b.HasOne("EntityLayer.Concreate.District", "District")
                        .WithMany("Branches")
                        .HasForeignKey("District_ID");

                    b.HasOne("EntityLayer.Concreate.Employee", null)
                        .WithMany("Branches")
                        .HasForeignKey("Employee_ID1");

                    b.HasOne("EntityLayer.Concreate.Province", "Province")
                        .WithMany()
                        .HasForeignKey("Province_ID");

                    b.HasOne("EntityLayer.Concreate.Season", null)
                        .WithMany("Branches")
                        .HasForeignKey("Season_ID");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Country", b =>
                {
                    b.HasOne("EntityLayer.Concreate.GeneralCenter", "generalCenter")
                        .WithMany("Countries")
                        .HasForeignKey("GeneralCenter_ID");

                    b.Navigation("generalCenter");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Department", b =>
                {
                    b.HasOne("EntityLayer.Concreate.GeneralCenter", "GeneralCenter")
                        .WithMany("Departments")
                        .HasForeignKey("GeneralCenter_ID");

                    b.Navigation("GeneralCenter");
                });

            modelBuilder.Entity("EntityLayer.Concreate.District", b =>
                {
                    b.HasOne("EntityLayer.Concreate.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("Province_ID");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EntityLayer.Concreate.EducationArea", b =>
                {
                    b.HasOne("EntityLayer.Concreate.EducationAreaType", "EducationAreaType")
                        .WithMany()
                        .HasForeignKey("EducationAreaType_ID");

                    b.HasOne("EntityLayer.Concreate.Season", "Season")
                        .WithMany()
                        .HasForeignKey("Season_ID");

                    b.Navigation("EducationAreaType");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Employee", b =>
                {
                    b.HasOne("EntityLayer.Concreate.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("Department_ID");

                    b.HasOne("EntityLayer.Concreate.District", "District")
                        .WithMany()
                        .HasForeignKey("District_ID");

                    b.HasOne("EntityLayer.Concreate.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("Profession_ID");

                    b.HasOne("EntityLayer.Concreate.Province", "Province")
                        .WithMany()
                        .HasForeignKey("Province_ID");

                    b.Navigation("Department");

                    b.Navigation("District");

                    b.Navigation("Profession");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Province", b =>
                {
                    b.HasOne("EntityLayer.Concreate.Area", "Area")
                        .WithMany("Provinces")
                        .HasForeignKey("Area_ID");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Area", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Country", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EntityLayer.Concreate.District", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Employee", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("EntityLayer.Concreate.GeneralCenter", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("EntityLayer.Concreate.Season", b =>
                {
                    b.Navigation("Branches");
                });
#pragma warning restore 612, 618
        }
    }
}
